end 关键字
print(b, end=',')
-----print默认以换行符结尾，加上end可替换换行


if 语句
if condition_1:
    statement_block_1
elif condition_2:
    statement_block_2
else:
    statement_block_3


while 循环
while 判断条件(condition)：
    执行语句(statements)……
    

while 循环使用 else 语句
如果 while 后面的条件语句为 false 时，则执行 else 的语句块。
while <expr>:
    <statement(s)>
else:
    <additional_statement(s)>
    
    
简单语句组
类似if语句的语法，如果你的while循环体中只有一条语句，你可以将该语句与while写在同一行中， 如下所示：
while (flag): print ('欢迎访问菜鸟教程!')


for 语句
Python for 循环可以遍历任何可迭代对象，如一个列表或者一个字符串。
for <variable> in <sequence>:
    <statements>
else:
    <statements>
    
    
range()函数
--------左闭右开，默认从0开始
如果你需要遍历数字序列，可以使用内置range()函数。它会生成数列
range(5)
你也可以使用range指定区间的值：
range(5,9)
也可以使range以指定数字开始并指定不同的增量(甚至可以是负数，有时这也叫做'步长'):
range(0, 10, 3)
负数：
range(-10, -100, -30)
您可以结合range()和len()函数以遍历一个序列的索引,如下所示:
>>> for i in range(len(a)):
...     print(i, a[i])
还可以使用range()函数来创建一个列表：
>>>list(range(5))



break 和 continue 语句及循环中的 else 子句
break 语句可以跳出 for 和 while 的循环体。如果你从 for 或 while 循环中终止，任何对应的循环 else 块将不执行。
continue 语句被用来告诉 Python 跳过当前循环块中的剩余语句，然后继续进行下一轮循环。
循环语句可以有 else 子句，它在穷尽列表(以for循环)或条件变为 false (以while循环)导致循环终止时被执行，但循环被 break 终止时不执行。


pass 语句
Python pass是空语句，是为了保持程序结构的完整性。
pass 不做任何事情，一般用做占位语句








